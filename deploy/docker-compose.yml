services:

    proxy:
      build:
        context: ../
        dockerfile: ./deploy/nginx/Dockerfile
      container_name: nginx
      hostname: nginx
      ports:
        - '${PROXY_PORT:-8081}:80'
      networks:
        - network

    backend-proxy:
      build:
        context: ../
        dockerfile: ./deploy/backend-proxy/Dockerfile
      container_name: backend-proxy
      hostname: backend-proxy
      volumes:
        - ../project/backend/storage/app/public/:/var/www/public/storage/app/public
      networks:
        - network

    backend:
      build:
        context: ../
        dockerfile: ./deploy/php/Dockerfile
      volumes:
        - ../project/backend:/var/www/public
      command: >
        sh -c "chown -R www-data:www-data /var/www/public &&
               chmod -R 755 /var/www/public &&
               php-fpm"
      networks:
        - network
      depends_on:
        - postgres

    frontend:
      build:
        context: ../
        dockerfile: ./deploy/frontend/Dockerfile
      container_name: frontend
      hostname: frontend
      volumes:
        - ../project/frontend:/app
      networks:
        - network

    postgres:
      image: postgres:alpine
      container_name: postgres
      environment:
        POSTGRES_DB: ${POSTGRES_DB:-postgres}
        POSTGRES_USER: ${POSTGRES_USER:-postgres}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      ports:
        - '5432:5432'
      volumes:
        - pgdata:/var/lib/postgresql/data
      networks:
        - network

    adminer:
      image: adminer:latest
      ports:
        - '${ADMINER_PORT:-8080}:8080'
      networks:
        - network

networks:
  network:

volumes:
  pgdata: